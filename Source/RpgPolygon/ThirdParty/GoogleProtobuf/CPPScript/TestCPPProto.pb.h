// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CPPScript/TestCPPProto.proto

#ifndef PROTOBUF_CPPScript_2fTestCPPProto_2eproto__INCLUDED
#define PROTOBUF_CPPScript_2fTestCPPProto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "CPPScript/TestCPPProto1.pb.h"
#include "CPPScript/Hello/TestCPPProto2.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_CPPScript_2fTestCPPProto_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsFStructObject_FStructObject1_FStructObject2Impl();
void InitDefaultsFStructObject_FStructObject1_FStructObject2();
void InitDefaultsFStructObject_FStructObject1Impl();
void InitDefaultsFStructObject_FStructObject1();
void InitDefaultsFStructObject_MasstirngEntry_DoNotUseImpl();
void InitDefaultsFStructObject_MasstirngEntry_DoNotUse();
void InitDefaultsFStructObjectImpl();
void InitDefaultsFStructObject();
inline void InitDefaults() {
  InitDefaultsFStructObject_FStructObject1_FStructObject2();
  InitDefaultsFStructObject_FStructObject1();
  InitDefaultsFStructObject_MasstirngEntry_DoNotUse();
  InitDefaultsFStructObject();
}
}  // namespace protobuf_CPPScript_2fTestCPPProto_2eproto
namespace TestCPP {
class FStructObject;
class FStructObjectDefaultTypeInternal;
extern FStructObjectDefaultTypeInternal _FStructObject_default_instance_;
class FStructObject_FStructObject1;
class FStructObject_FStructObject1DefaultTypeInternal;
extern FStructObject_FStructObject1DefaultTypeInternal _FStructObject_FStructObject1_default_instance_;
class FStructObject_FStructObject1_FStructObject2;
class FStructObject_FStructObject1_FStructObject2DefaultTypeInternal;
extern FStructObject_FStructObject1_FStructObject2DefaultTypeInternal _FStructObject_FStructObject1_FStructObject2_default_instance_;
class FStructObject_MasstirngEntry_DoNotUse;
class FStructObject_MasstirngEntry_DoNotUseDefaultTypeInternal;
extern FStructObject_MasstirngEntry_DoNotUseDefaultTypeInternal _FStructObject_MasstirngEntry_DoNotUse_default_instance_;
}  // namespace TestCPP
namespace TestCPP {

enum FStructObject_EHelloState {
  FStructObject_EHelloState_HELLONONE = 0,
  FStructObject_EHelloState_HELLOOK = 1,
  FStructObject_EHelloState_HELLOHELLO = 2,
  FStructObject_EHelloState_FStructObject_EHelloState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FStructObject_EHelloState_FStructObject_EHelloState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool FStructObject_EHelloState_IsValid(int value);
const FStructObject_EHelloState FStructObject_EHelloState_EHelloState_MIN = FStructObject_EHelloState_HELLONONE;
const FStructObject_EHelloState FStructObject_EHelloState_EHelloState_MAX = FStructObject_EHelloState_HELLOHELLO;
const int FStructObject_EHelloState_EHelloState_ARRAYSIZE = FStructObject_EHelloState_EHelloState_MAX + 1;

const ::google::protobuf::EnumDescriptor* FStructObject_EHelloState_descriptor();
inline const ::std::string& FStructObject_EHelloState_Name(FStructObject_EHelloState value) {
  return ::google::protobuf::internal::NameOfEnum(
    FStructObject_EHelloState_descriptor(), value);
}
inline bool FStructObject_EHelloState_Parse(
    const ::std::string& name, FStructObject_EHelloState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FStructObject_EHelloState>(
    FStructObject_EHelloState_descriptor(), name, value);
}
enum EPlayerState {
  NONE = 0,
  OK = 1,
  Hello = 2,
  EPlayerState_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  EPlayerState_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool EPlayerState_IsValid(int value);
const EPlayerState EPlayerState_MIN = NONE;
const EPlayerState EPlayerState_MAX = Hello;
const int EPlayerState_ARRAYSIZE = EPlayerState_MAX + 1;

const ::google::protobuf::EnumDescriptor* EPlayerState_descriptor();
inline const ::std::string& EPlayerState_Name(EPlayerState value) {
  return ::google::protobuf::internal::NameOfEnum(
    EPlayerState_descriptor(), value);
}
inline bool EPlayerState_Parse(
    const ::std::string& name, EPlayerState* value) {
  return ::google::protobuf::internal::ParseNamedEnum<EPlayerState>(
    EPlayerState_descriptor(), name, value);
}
// ===================================================================

class FStructObject_FStructObject1_FStructObject2 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestCPP.FStructObject.FStructObject1.FStructObject2) */ {
 public:
  FStructObject_FStructObject1_FStructObject2();
  virtual ~FStructObject_FStructObject1_FStructObject2();

  FStructObject_FStructObject1_FStructObject2(const FStructObject_FStructObject1_FStructObject2& from);

  inline FStructObject_FStructObject1_FStructObject2& operator=(const FStructObject_FStructObject1_FStructObject2& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FStructObject_FStructObject1_FStructObject2(FStructObject_FStructObject1_FStructObject2&& from) noexcept
    : FStructObject_FStructObject1_FStructObject2() {
    *this = ::std::move(from);
  }

  inline FStructObject_FStructObject1_FStructObject2& operator=(FStructObject_FStructObject1_FStructObject2&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FStructObject_FStructObject1_FStructObject2& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FStructObject_FStructObject1_FStructObject2* internal_default_instance() {
    return reinterpret_cast<const FStructObject_FStructObject1_FStructObject2*>(
               &_FStructObject_FStructObject1_FStructObject2_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(FStructObject_FStructObject1_FStructObject2* other);
  friend void swap(FStructObject_FStructObject1_FStructObject2& a, FStructObject_FStructObject1_FStructObject2& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FStructObject_FStructObject1_FStructObject2* New() const PROTOBUF_FINAL { return New(NULL); }

  FStructObject_FStructObject1_FStructObject2* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FStructObject_FStructObject1_FStructObject2& from);
  void MergeFrom(const FStructObject_FStructObject1_FStructObject2& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FStructObject_FStructObject1_FStructObject2* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 helloint32 = 1;
  void clear_helloint32();
  static const int kHelloint32FieldNumber = 1;
  ::google::protobuf::int32 helloint32() const;
  void set_helloint32(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TestCPP.FStructObject.FStructObject1.FStructObject2)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 helloint32_;
  mutable int _cached_size_;
  friend struct ::protobuf_CPPScript_2fTestCPPProto_2eproto::TableStruct;
  friend void ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1_FStructObject2Impl();
};
// -------------------------------------------------------------------

class FStructObject_FStructObject1 : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestCPP.FStructObject.FStructObject1) */ {
 public:
  FStructObject_FStructObject1();
  virtual ~FStructObject_FStructObject1();

  FStructObject_FStructObject1(const FStructObject_FStructObject1& from);

  inline FStructObject_FStructObject1& operator=(const FStructObject_FStructObject1& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FStructObject_FStructObject1(FStructObject_FStructObject1&& from) noexcept
    : FStructObject_FStructObject1() {
    *this = ::std::move(from);
  }

  inline FStructObject_FStructObject1& operator=(FStructObject_FStructObject1&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FStructObject_FStructObject1& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FStructObject_FStructObject1* internal_default_instance() {
    return reinterpret_cast<const FStructObject_FStructObject1*>(
               &_FStructObject_FStructObject1_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(FStructObject_FStructObject1* other);
  friend void swap(FStructObject_FStructObject1& a, FStructObject_FStructObject1& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FStructObject_FStructObject1* New() const PROTOBUF_FINAL { return New(NULL); }

  FStructObject_FStructObject1* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FStructObject_FStructObject1& from);
  void MergeFrom(const FStructObject_FStructObject1& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FStructObject_FStructObject1* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FStructObject_FStructObject1_FStructObject2 FStructObject2;

  // accessors -------------------------------------------------------

  // .TestCPP.FStructObject.FStructObject1.FStructObject2 Object = 2;
  bool has_object() const;
  void clear_object();
  static const int kObjectFieldNumber = 2;
  const ::TestCPP::FStructObject_FStructObject1_FStructObject2& object() const;
  ::TestCPP::FStructObject_FStructObject1_FStructObject2* release_object();
  ::TestCPP::FStructObject_FStructObject1_FStructObject2* mutable_object();
  void set_allocated_object(::TestCPP::FStructObject_FStructObject1_FStructObject2* object);

  // int32 helloint32 = 1;
  void clear_helloint32();
  static const int kHelloint32FieldNumber = 1;
  ::google::protobuf::int32 helloint32() const;
  void set_helloint32(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:TestCPP.FStructObject.FStructObject1)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::TestCPP::FStructObject_FStructObject1_FStructObject2* object_;
  ::google::protobuf::int32 helloint32_;
  mutable int _cached_size_;
  friend struct ::protobuf_CPPScript_2fTestCPPProto_2eproto::TableStruct;
  friend void ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1Impl();
};
// -------------------------------------------------------------------

class FStructObject_MasstirngEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<FStructObject_MasstirngEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<FStructObject_MasstirngEntry_DoNotUse, 
    ::google::protobuf::int32, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    0 > SuperType;
  FStructObject_MasstirngEntry_DoNotUse();
  FStructObject_MasstirngEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const FStructObject_MasstirngEntry_DoNotUse& other);
  static const FStructObject_MasstirngEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const FStructObject_MasstirngEntry_DoNotUse*>(&_FStructObject_MasstirngEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class FStructObject : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:TestCPP.FStructObject) */ {
 public:
  FStructObject();
  virtual ~FStructObject();

  FStructObject(const FStructObject& from);

  inline FStructObject& operator=(const FStructObject& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FStructObject(FStructObject&& from) noexcept
    : FStructObject() {
    *this = ::std::move(from);
  }

  inline FStructObject& operator=(FStructObject&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FStructObject& default_instance();

  enum HelloOneofCase {
    kHellostring = 20,
    kHellostring1 = 21,
    kHellostring2 = 22,
    kHellostring3 = 23,
    kHellostring4 = 24,
    kHellostring5 = 25,
    HELLO_ONEOF_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FStructObject* internal_default_instance() {
    return reinterpret_cast<const FStructObject*>(
               &_FStructObject_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FStructObject* other);
  friend void swap(FStructObject& a, FStructObject& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FStructObject* New() const PROTOBUF_FINAL { return New(NULL); }

  FStructObject* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FStructObject& from);
  void MergeFrom(const FStructObject& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FStructObject* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef FStructObject_FStructObject1 FStructObject1;

  typedef FStructObject_EHelloState EHelloState;
  static const EHelloState HELLONONE =
    FStructObject_EHelloState_HELLONONE;
  static const EHelloState HELLOOK =
    FStructObject_EHelloState_HELLOOK;
  static const EHelloState HELLOHELLO =
    FStructObject_EHelloState_HELLOHELLO;
  static inline bool EHelloState_IsValid(int value) {
    return FStructObject_EHelloState_IsValid(value);
  }
  static const EHelloState EHelloState_MIN =
    FStructObject_EHelloState_EHelloState_MIN;
  static const EHelloState EHelloState_MAX =
    FStructObject_EHelloState_EHelloState_MAX;
  static const int EHelloState_ARRAYSIZE =
    FStructObject_EHelloState_EHelloState_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  EHelloState_descriptor() {
    return FStructObject_EHelloState_descriptor();
  }
  static inline const ::std::string& EHelloState_Name(EHelloState value) {
    return FStructObject_EHelloState_Name(value);
  }
  static inline bool EHelloState_Parse(const ::std::string& name,
      EHelloState* value) {
    return FStructObject_EHelloState_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // map<int32, string> masstirng = 28;
  int masstirng_size() const;
  void clear_masstirng();
  static const int kMasstirngFieldNumber = 28;
  const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
      masstirng() const;
  ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
      mutable_masstirng();

  // repeated int32 MyArrayInt = 29;
  int myarrayint_size() const;
  void clear_myarrayint();
  static const int kMyArrayIntFieldNumber = 29;
  ::google::protobuf::int32 myarrayint(int index) const;
  void set_myarrayint(int index, ::google::protobuf::int32 value);
  void add_myarrayint(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      myarrayint() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_myarrayint();

  // repeated string MyArrayString = 30;
  int myarraystring_size() const;
  void clear_myarraystring();
  static const int kMyArrayStringFieldNumber = 30;
  const ::std::string& myarraystring(int index) const;
  ::std::string* mutable_myarraystring(int index);
  void set_myarraystring(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_myarraystring(int index, ::std::string&& value);
  #endif
  void set_myarraystring(int index, const char* value);
  void set_myarraystring(int index, const char* value, size_t size);
  ::std::string* add_myarraystring();
  void add_myarraystring(const ::std::string& value);
  #if LANG_CXX11
  void add_myarraystring(::std::string&& value);
  #endif
  void add_myarraystring(const char* value);
  void add_myarraystring(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& myarraystring() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_myarraystring();

  // string Str = 3;
  void clear_str();
  static const int kStrFieldNumber = 3;
  const ::std::string& str() const;
  void set_str(const ::std::string& value);
  #if LANG_CXX11
  void set_str(::std::string&& value);
  #endif
  void set_str(const char* value);
  void set_str(const char* value, size_t size);
  ::std::string* mutable_str();
  ::std::string* release_str();
  void set_allocated_str(::std::string* str);

  // string xxxxstr = 16;
  void clear_xxxxstr();
  static const int kXxxxstrFieldNumber = 16;
  const ::std::string& xxxxstr() const;
  void set_xxxxstr(const ::std::string& value);
  #if LANG_CXX11
  void set_xxxxstr(::std::string&& value);
  #endif
  void set_xxxxstr(const char* value);
  void set_xxxxstr(const char* value, size_t size);
  ::std::string* mutable_xxxxstr();
  ::std::string* release_xxxxstr();
  void set_allocated_xxxxstr(::std::string* xxxxstr);

  // bytes xxxbytes = 17;
  void clear_xxxbytes();
  static const int kXxxbytesFieldNumber = 17;
  const ::std::string& xxxbytes() const;
  void set_xxxbytes(const ::std::string& value);
  #if LANG_CXX11
  void set_xxxbytes(::std::string&& value);
  #endif
  void set_xxxbytes(const char* value);
  void set_xxxbytes(const void* value, size_t size);
  ::std::string* mutable_xxxbytes();
  ::std::string* release_xxxbytes();
  void set_allocated_xxxbytes(::std::string* xxxbytes);

  // .TestCPP.FStructObject.FStructObject1 Object2 = 19;
  bool has_object2() const;
  void clear_object2();
  static const int kObject2FieldNumber = 19;
  const ::TestCPP::FStructObject_FStructObject1& object2() const;
  ::TestCPP::FStructObject_FStructObject1* release_object2();
  ::TestCPP::FStructObject_FStructObject1* mutable_object2();
  void set_allocated_object2(::TestCPP::FStructObject_FStructObject1* object2);

  // int32 intvalue = 1;
  void clear_intvalue();
  static const int kIntvalueFieldNumber = 1;
  ::google::protobuf::int32 intvalue() const;
  void set_intvalue(::google::protobuf::int32 value);

  // int32 intok = 2;
  void clear_intok();
  static const int kIntokFieldNumber = 2;
  ::google::protobuf::int32 intok() const;
  void set_intok(::google::protobuf::int32 value);

  // double helloDouble = 5;
  void clear_hellodouble();
  static const int kHelloDoubleFieldNumber = 5;
  double hellodouble() const;
  void set_hellodouble(double value);

  // .TestCPP.EPlayerState type = 4;
  void clear_type();
  static const int kTypeFieldNumber = 4;
  ::TestCPP::EPlayerState type() const;
  void set_type(::TestCPP::EPlayerState value);

  // float helloFloat = 6;
  void clear_hellofloat();
  static const int kHelloFloatFieldNumber = 6;
  float hellofloat() const;
  void set_hellofloat(float value);

  // sint32 hellosint32 = 7;
  void clear_hellosint32();
  static const int kHellosint32FieldNumber = 7;
  ::google::protobuf::int32 hellosint32() const;
  void set_hellosint32(::google::protobuf::int32 value);

  // uint32 hellouint32 = 8;
  void clear_hellouint32();
  static const int kHellouint32FieldNumber = 8;
  ::google::protobuf::uint32 hellouint32() const;
  void set_hellouint32(::google::protobuf::uint32 value);

  // uint64 hellouint64 = 9;
  void clear_hellouint64();
  static const int kHellouint64FieldNumber = 9;
  ::google::protobuf::uint64 hellouint64() const;
  void set_hellouint64(::google::protobuf::uint64 value);

  // sint64 hellosint64 = 10;
  void clear_hellosint64();
  static const int kHellosint64FieldNumber = 10;
  ::google::protobuf::int64 hellosint64() const;
  void set_hellosint64(::google::protobuf::int64 value);

  // fixed64 hellofiexed64 = 12;
  void clear_hellofiexed64();
  static const int kHellofiexed64FieldNumber = 12;
  ::google::protobuf::uint64 hellofiexed64() const;
  void set_hellofiexed64(::google::protobuf::uint64 value);

  // fixed32 hellofiexed32 = 11;
  void clear_hellofiexed32();
  static const int kHellofiexed32FieldNumber = 11;
  ::google::protobuf::uint32 hellofiexed32() const;
  void set_hellofiexed32(::google::protobuf::uint32 value);

  // sfixed32 uhellofiexed32 = 13;
  void clear_uhellofiexed32();
  static const int kUhellofiexed32FieldNumber = 13;
  ::google::protobuf::int32 uhellofiexed32() const;
  void set_uhellofiexed32(::google::protobuf::int32 value);

  // sfixed64 uhellofiexed64 = 14;
  void clear_uhellofiexed64();
  static const int kUhellofiexed64FieldNumber = 14;
  ::google::protobuf::int64 uhellofiexed64() const;
  void set_uhellofiexed64(::google::protobuf::int64 value);

  // bool bUP = 15;
  void clear_bup();
  static const int kBUPFieldNumber = 15;
  bool bup() const;
  void set_bup(bool value);

  // .TestCPP.FStructObject.EHelloState HelloState = 18;
  void clear_hellostate();
  static const int kHelloStateFieldNumber = 18;
  ::TestCPP::FStructObject_EHelloState hellostate() const;
  void set_hellostate(::TestCPP::FStructObject_EHelloState value);

  // .PlayerStateHello.EBoneState BoneState = 26;
  void clear_bonestate();
  static const int kBoneStateFieldNumber = 26;
  ::PlayerStateHello::EBoneState bonestate() const;
  void set_bonestate(::PlayerStateHello::EBoneState value);

  // .PlayerStateHello1.EBone1State Bone1State = 27;
  void clear_bone1state();
  static const int kBone1StateFieldNumber = 27;
  ::PlayerStateHello1::EBone1State bone1state() const;
  void set_bone1state(::PlayerStateHello1::EBone1State value);

  // string hellostring = 20;
  private:
  bool has_hellostring() const;
  public:
  void clear_hellostring();
  static const int kHellostringFieldNumber = 20;
  const ::std::string& hellostring() const;
  void set_hellostring(const ::std::string& value);
  #if LANG_CXX11
  void set_hellostring(::std::string&& value);
  #endif
  void set_hellostring(const char* value);
  void set_hellostring(const char* value, size_t size);
  ::std::string* mutable_hellostring();
  ::std::string* release_hellostring();
  void set_allocated_hellostring(::std::string* hellostring);

  // string hellostring1 = 21;
  private:
  bool has_hellostring1() const;
  public:
  void clear_hellostring1();
  static const int kHellostring1FieldNumber = 21;
  const ::std::string& hellostring1() const;
  void set_hellostring1(const ::std::string& value);
  #if LANG_CXX11
  void set_hellostring1(::std::string&& value);
  #endif
  void set_hellostring1(const char* value);
  void set_hellostring1(const char* value, size_t size);
  ::std::string* mutable_hellostring1();
  ::std::string* release_hellostring1();
  void set_allocated_hellostring1(::std::string* hellostring1);

  // string hellostring2 = 22;
  private:
  bool has_hellostring2() const;
  public:
  void clear_hellostring2();
  static const int kHellostring2FieldNumber = 22;
  const ::std::string& hellostring2() const;
  void set_hellostring2(const ::std::string& value);
  #if LANG_CXX11
  void set_hellostring2(::std::string&& value);
  #endif
  void set_hellostring2(const char* value);
  void set_hellostring2(const char* value, size_t size);
  ::std::string* mutable_hellostring2();
  ::std::string* release_hellostring2();
  void set_allocated_hellostring2(::std::string* hellostring2);

  // string hellostring3 = 23;
  private:
  bool has_hellostring3() const;
  public:
  void clear_hellostring3();
  static const int kHellostring3FieldNumber = 23;
  const ::std::string& hellostring3() const;
  void set_hellostring3(const ::std::string& value);
  #if LANG_CXX11
  void set_hellostring3(::std::string&& value);
  #endif
  void set_hellostring3(const char* value);
  void set_hellostring3(const char* value, size_t size);
  ::std::string* mutable_hellostring3();
  ::std::string* release_hellostring3();
  void set_allocated_hellostring3(::std::string* hellostring3);

  // string hellostring4 = 24;
  private:
  bool has_hellostring4() const;
  public:
  void clear_hellostring4();
  static const int kHellostring4FieldNumber = 24;
  const ::std::string& hellostring4() const;
  void set_hellostring4(const ::std::string& value);
  #if LANG_CXX11
  void set_hellostring4(::std::string&& value);
  #endif
  void set_hellostring4(const char* value);
  void set_hellostring4(const char* value, size_t size);
  ::std::string* mutable_hellostring4();
  ::std::string* release_hellostring4();
  void set_allocated_hellostring4(::std::string* hellostring4);

  // string hellostring5 = 25;
  private:
  bool has_hellostring5() const;
  public:
  void clear_hellostring5();
  static const int kHellostring5FieldNumber = 25;
  const ::std::string& hellostring5() const;
  void set_hellostring5(const ::std::string& value);
  #if LANG_CXX11
  void set_hellostring5(::std::string&& value);
  #endif
  void set_hellostring5(const char* value);
  void set_hellostring5(const char* value, size_t size);
  ::std::string* mutable_hellostring5();
  ::std::string* release_hellostring5();
  void set_allocated_hellostring5(::std::string* hellostring5);

  HelloOneofCase hello_oneof_case() const;
  // @@protoc_insertion_point(class_scope:TestCPP.FStructObject)
 private:
  void set_has_hellostring();
  void set_has_hellostring1();
  void set_has_hellostring2();
  void set_has_hellostring3();
  void set_has_hellostring4();
  void set_has_hellostring5();

  inline bool has_hello_oneof() const;
  void clear_hello_oneof();
  inline void clear_has_hello_oneof();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      FStructObject_MasstirngEntry_DoNotUse,
      ::google::protobuf::int32, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      0 > masstirng_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > myarrayint_;
  mutable int _myarrayint_cached_byte_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> myarraystring_;
  ::google::protobuf::internal::ArenaStringPtr str_;
  ::google::protobuf::internal::ArenaStringPtr xxxxstr_;
  ::google::protobuf::internal::ArenaStringPtr xxxbytes_;
  ::TestCPP::FStructObject_FStructObject1* object2_;
  ::google::protobuf::int32 intvalue_;
  ::google::protobuf::int32 intok_;
  double hellodouble_;
  int type_;
  float hellofloat_;
  ::google::protobuf::int32 hellosint32_;
  ::google::protobuf::uint32 hellouint32_;
  ::google::protobuf::uint64 hellouint64_;
  ::google::protobuf::int64 hellosint64_;
  ::google::protobuf::uint64 hellofiexed64_;
  ::google::protobuf::uint32 hellofiexed32_;
  ::google::protobuf::int32 uhellofiexed32_;
  ::google::protobuf::int64 uhellofiexed64_;
  bool bup_;
  int hellostate_;
  int bonestate_;
  int bone1state_;
  union HelloOneofUnion {
    HelloOneofUnion() {}
    ::google::protobuf::internal::ArenaStringPtr hellostring_;
    ::google::protobuf::internal::ArenaStringPtr hellostring1_;
    ::google::protobuf::internal::ArenaStringPtr hellostring2_;
    ::google::protobuf::internal::ArenaStringPtr hellostring3_;
    ::google::protobuf::internal::ArenaStringPtr hellostring4_;
    ::google::protobuf::internal::ArenaStringPtr hellostring5_;
  } hello_oneof_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_CPPScript_2fTestCPPProto_2eproto::TableStruct;
  friend void ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObjectImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FStructObject_FStructObject1_FStructObject2

// int32 helloint32 = 1;
inline void FStructObject_FStructObject1_FStructObject2::clear_helloint32() {
  helloint32_ = 0;
}
inline ::google::protobuf::int32 FStructObject_FStructObject1_FStructObject2::helloint32() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.FStructObject1.FStructObject2.helloint32)
  return helloint32_;
}
inline void FStructObject_FStructObject1_FStructObject2::set_helloint32(::google::protobuf::int32 value) {
  
  helloint32_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.FStructObject1.FStructObject2.helloint32)
}

// -------------------------------------------------------------------

// FStructObject_FStructObject1

// int32 helloint32 = 1;
inline void FStructObject_FStructObject1::clear_helloint32() {
  helloint32_ = 0;
}
inline ::google::protobuf::int32 FStructObject_FStructObject1::helloint32() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.FStructObject1.helloint32)
  return helloint32_;
}
inline void FStructObject_FStructObject1::set_helloint32(::google::protobuf::int32 value) {
  
  helloint32_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.FStructObject1.helloint32)
}

// .TestCPP.FStructObject.FStructObject1.FStructObject2 Object = 2;
inline bool FStructObject_FStructObject1::has_object() const {
  return this != internal_default_instance() && object_ != NULL;
}
inline void FStructObject_FStructObject1::clear_object() {
  if (GetArenaNoVirtual() == NULL && object_ != NULL) {
    delete object_;
  }
  object_ = NULL;
}
inline const ::TestCPP::FStructObject_FStructObject1_FStructObject2& FStructObject_FStructObject1::object() const {
  const ::TestCPP::FStructObject_FStructObject1_FStructObject2* p = object_;
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.FStructObject1.Object)
  return p != NULL ? *p : *reinterpret_cast<const ::TestCPP::FStructObject_FStructObject1_FStructObject2*>(
      &::TestCPP::_FStructObject_FStructObject1_FStructObject2_default_instance_);
}
inline ::TestCPP::FStructObject_FStructObject1_FStructObject2* FStructObject_FStructObject1::release_object() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.FStructObject1.Object)
  
  ::TestCPP::FStructObject_FStructObject1_FStructObject2* temp = object_;
  object_ = NULL;
  return temp;
}
inline ::TestCPP::FStructObject_FStructObject1_FStructObject2* FStructObject_FStructObject1::mutable_object() {
  
  if (object_ == NULL) {
    object_ = new ::TestCPP::FStructObject_FStructObject1_FStructObject2;
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.FStructObject1.Object)
  return object_;
}
inline void FStructObject_FStructObject1::set_allocated_object(::TestCPP::FStructObject_FStructObject1_FStructObject2* object) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete object_;
  }
  if (object) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      object = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object, submessage_arena);
    }
    
  } else {
    
  }
  object_ = object;
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.FStructObject1.Object)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// FStructObject

// int32 intvalue = 1;
inline void FStructObject::clear_intvalue() {
  intvalue_ = 0;
}
inline ::google::protobuf::int32 FStructObject::intvalue() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.intvalue)
  return intvalue_;
}
inline void FStructObject::set_intvalue(::google::protobuf::int32 value) {
  
  intvalue_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.intvalue)
}

// int32 intok = 2;
inline void FStructObject::clear_intok() {
  intok_ = 0;
}
inline ::google::protobuf::int32 FStructObject::intok() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.intok)
  return intok_;
}
inline void FStructObject::set_intok(::google::protobuf::int32 value) {
  
  intok_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.intok)
}

// string Str = 3;
inline void FStructObject::clear_str() {
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FStructObject::str() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.Str)
  return str_.GetNoArena();
}
inline void FStructObject::set_str(const ::std::string& value) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.Str)
}
#if LANG_CXX11
inline void FStructObject::set_str(::std::string&& value) {
  
  str_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.Str)
}
#endif
inline void FStructObject::set_str(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.Str)
}
inline void FStructObject::set_str(const char* value, size_t size) {
  
  str_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.Str)
}
inline ::std::string* FStructObject::mutable_str() {
  
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.Str)
  return str_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_str() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.Str)
  
  return str_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FStructObject::set_allocated_str(::std::string* str) {
  if (str != NULL) {
    
  } else {
    
  }
  str_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), str);
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.Str)
}

// .TestCPP.EPlayerState type = 4;
inline void FStructObject::clear_type() {
  type_ = 0;
}
inline ::TestCPP::EPlayerState FStructObject::type() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.type)
  return static_cast< ::TestCPP::EPlayerState >(type_);
}
inline void FStructObject::set_type(::TestCPP::EPlayerState value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.type)
}

// double helloDouble = 5;
inline void FStructObject::clear_hellodouble() {
  hellodouble_ = 0;
}
inline double FStructObject::hellodouble() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.helloDouble)
  return hellodouble_;
}
inline void FStructObject::set_hellodouble(double value) {
  
  hellodouble_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.helloDouble)
}

// float helloFloat = 6;
inline void FStructObject::clear_hellofloat() {
  hellofloat_ = 0;
}
inline float FStructObject::hellofloat() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.helloFloat)
  return hellofloat_;
}
inline void FStructObject::set_hellofloat(float value) {
  
  hellofloat_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.helloFloat)
}

// sint32 hellosint32 = 7;
inline void FStructObject::clear_hellosint32() {
  hellosint32_ = 0;
}
inline ::google::protobuf::int32 FStructObject::hellosint32() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellosint32)
  return hellosint32_;
}
inline void FStructObject::set_hellosint32(::google::protobuf::int32 value) {
  
  hellosint32_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellosint32)
}

// uint32 hellouint32 = 8;
inline void FStructObject::clear_hellouint32() {
  hellouint32_ = 0u;
}
inline ::google::protobuf::uint32 FStructObject::hellouint32() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellouint32)
  return hellouint32_;
}
inline void FStructObject::set_hellouint32(::google::protobuf::uint32 value) {
  
  hellouint32_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellouint32)
}

// uint64 hellouint64 = 9;
inline void FStructObject::clear_hellouint64() {
  hellouint64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FStructObject::hellouint64() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellouint64)
  return hellouint64_;
}
inline void FStructObject::set_hellouint64(::google::protobuf::uint64 value) {
  
  hellouint64_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellouint64)
}

// sint64 hellosint64 = 10;
inline void FStructObject::clear_hellosint64() {
  hellosint64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FStructObject::hellosint64() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellosint64)
  return hellosint64_;
}
inline void FStructObject::set_hellosint64(::google::protobuf::int64 value) {
  
  hellosint64_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellosint64)
}

// fixed32 hellofiexed32 = 11;
inline void FStructObject::clear_hellofiexed32() {
  hellofiexed32_ = 0u;
}
inline ::google::protobuf::uint32 FStructObject::hellofiexed32() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellofiexed32)
  return hellofiexed32_;
}
inline void FStructObject::set_hellofiexed32(::google::protobuf::uint32 value) {
  
  hellofiexed32_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellofiexed32)
}

// fixed64 hellofiexed64 = 12;
inline void FStructObject::clear_hellofiexed64() {
  hellofiexed64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 FStructObject::hellofiexed64() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellofiexed64)
  return hellofiexed64_;
}
inline void FStructObject::set_hellofiexed64(::google::protobuf::uint64 value) {
  
  hellofiexed64_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellofiexed64)
}

// sfixed32 uhellofiexed32 = 13;
inline void FStructObject::clear_uhellofiexed32() {
  uhellofiexed32_ = 0;
}
inline ::google::protobuf::int32 FStructObject::uhellofiexed32() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.uhellofiexed32)
  return uhellofiexed32_;
}
inline void FStructObject::set_uhellofiexed32(::google::protobuf::int32 value) {
  
  uhellofiexed32_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.uhellofiexed32)
}

// sfixed64 uhellofiexed64 = 14;
inline void FStructObject::clear_uhellofiexed64() {
  uhellofiexed64_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 FStructObject::uhellofiexed64() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.uhellofiexed64)
  return uhellofiexed64_;
}
inline void FStructObject::set_uhellofiexed64(::google::protobuf::int64 value) {
  
  uhellofiexed64_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.uhellofiexed64)
}

// bool bUP = 15;
inline void FStructObject::clear_bup() {
  bup_ = false;
}
inline bool FStructObject::bup() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.bUP)
  return bup_;
}
inline void FStructObject::set_bup(bool value) {
  
  bup_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.bUP)
}

// string xxxxstr = 16;
inline void FStructObject::clear_xxxxstr() {
  xxxxstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FStructObject::xxxxstr() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.xxxxstr)
  return xxxxstr_.GetNoArena();
}
inline void FStructObject::set_xxxxstr(const ::std::string& value) {
  
  xxxxstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.xxxxstr)
}
#if LANG_CXX11
inline void FStructObject::set_xxxxstr(::std::string&& value) {
  
  xxxxstr_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.xxxxstr)
}
#endif
inline void FStructObject::set_xxxxstr(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xxxxstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.xxxxstr)
}
inline void FStructObject::set_xxxxstr(const char* value, size_t size) {
  
  xxxxstr_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.xxxxstr)
}
inline ::std::string* FStructObject::mutable_xxxxstr() {
  
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.xxxxstr)
  return xxxxstr_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_xxxxstr() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.xxxxstr)
  
  return xxxxstr_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FStructObject::set_allocated_xxxxstr(::std::string* xxxxstr) {
  if (xxxxstr != NULL) {
    
  } else {
    
  }
  xxxxstr_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xxxxstr);
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.xxxxstr)
}

// bytes xxxbytes = 17;
inline void FStructObject::clear_xxxbytes() {
  xxxbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& FStructObject::xxxbytes() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.xxxbytes)
  return xxxbytes_.GetNoArena();
}
inline void FStructObject::set_xxxbytes(const ::std::string& value) {
  
  xxxbytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.xxxbytes)
}
#if LANG_CXX11
inline void FStructObject::set_xxxbytes(::std::string&& value) {
  
  xxxbytes_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.xxxbytes)
}
#endif
inline void FStructObject::set_xxxbytes(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  xxxbytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.xxxbytes)
}
inline void FStructObject::set_xxxbytes(const void* value, size_t size) {
  
  xxxbytes_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.xxxbytes)
}
inline ::std::string* FStructObject::mutable_xxxbytes() {
  
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.xxxbytes)
  return xxxbytes_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_xxxbytes() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.xxxbytes)
  
  return xxxbytes_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void FStructObject::set_allocated_xxxbytes(::std::string* xxxbytes) {
  if (xxxbytes != NULL) {
    
  } else {
    
  }
  xxxbytes_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), xxxbytes);
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.xxxbytes)
}

// .TestCPP.FStructObject.EHelloState HelloState = 18;
inline void FStructObject::clear_hellostate() {
  hellostate_ = 0;
}
inline ::TestCPP::FStructObject_EHelloState FStructObject::hellostate() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.HelloState)
  return static_cast< ::TestCPP::FStructObject_EHelloState >(hellostate_);
}
inline void FStructObject::set_hellostate(::TestCPP::FStructObject_EHelloState value) {
  
  hellostate_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.HelloState)
}

// .TestCPP.FStructObject.FStructObject1 Object2 = 19;
inline bool FStructObject::has_object2() const {
  return this != internal_default_instance() && object2_ != NULL;
}
inline void FStructObject::clear_object2() {
  if (GetArenaNoVirtual() == NULL && object2_ != NULL) {
    delete object2_;
  }
  object2_ = NULL;
}
inline const ::TestCPP::FStructObject_FStructObject1& FStructObject::object2() const {
  const ::TestCPP::FStructObject_FStructObject1* p = object2_;
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.Object2)
  return p != NULL ? *p : *reinterpret_cast<const ::TestCPP::FStructObject_FStructObject1*>(
      &::TestCPP::_FStructObject_FStructObject1_default_instance_);
}
inline ::TestCPP::FStructObject_FStructObject1* FStructObject::release_object2() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.Object2)
  
  ::TestCPP::FStructObject_FStructObject1* temp = object2_;
  object2_ = NULL;
  return temp;
}
inline ::TestCPP::FStructObject_FStructObject1* FStructObject::mutable_object2() {
  
  if (object2_ == NULL) {
    object2_ = new ::TestCPP::FStructObject_FStructObject1;
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.Object2)
  return object2_;
}
inline void FStructObject::set_allocated_object2(::TestCPP::FStructObject_FStructObject1* object2) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete object2_;
  }
  if (object2) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      object2 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, object2, submessage_arena);
    }
    
  } else {
    
  }
  object2_ = object2;
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.Object2)
}

// string hellostring = 20;
inline bool FStructObject::has_hellostring() const {
  return hello_oneof_case() == kHellostring;
}
inline void FStructObject::set_has_hellostring() {
  _oneof_case_[0] = kHellostring;
}
inline void FStructObject::clear_hellostring() {
  if (has_hellostring()) {
    hello_oneof_.hellostring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_hello_oneof();
  }
}
inline const ::std::string& FStructObject::hellostring() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellostring)
  if (has_hellostring()) {
    return hello_oneof_.hellostring_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void FStructObject::set_hellostring(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring)
  if (!has_hellostring()) {
    clear_hello_oneof();
    set_has_hellostring();
    hello_oneof_.hellostring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring)
}
#if LANG_CXX11
inline void FStructObject::set_hellostring(::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring)
  if (!has_hellostring()) {
    clear_hello_oneof();
    set_has_hellostring();
    hello_oneof_.hellostring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.hellostring)
}
#endif
inline void FStructObject::set_hellostring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_hellostring()) {
    clear_hello_oneof();
    set_has_hellostring();
    hello_oneof_.hellostring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.hellostring)
}
inline void FStructObject::set_hellostring(const char* value, size_t size) {
  if (!has_hellostring()) {
    clear_hello_oneof();
    set_has_hellostring();
    hello_oneof_.hellostring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.hellostring)
}
inline ::std::string* FStructObject::mutable_hellostring() {
  if (!has_hellostring()) {
    clear_hello_oneof();
    set_has_hellostring();
    hello_oneof_.hellostring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.hellostring)
  return hello_oneof_.hellostring_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_hellostring() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.hellostring)
  if (has_hellostring()) {
    clear_has_hello_oneof();
    return hello_oneof_.hellostring_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void FStructObject::set_allocated_hellostring(::std::string* hellostring) {
  if (!has_hellostring()) {
    hello_oneof_.hellostring_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_hello_oneof();
  if (hellostring != NULL) {
    set_has_hellostring();
    hello_oneof_.hellostring_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        hellostring);
  }
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.hellostring)
}

// string hellostring1 = 21;
inline bool FStructObject::has_hellostring1() const {
  return hello_oneof_case() == kHellostring1;
}
inline void FStructObject::set_has_hellostring1() {
  _oneof_case_[0] = kHellostring1;
}
inline void FStructObject::clear_hellostring1() {
  if (has_hellostring1()) {
    hello_oneof_.hellostring1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_hello_oneof();
  }
}
inline const ::std::string& FStructObject::hellostring1() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellostring1)
  if (has_hellostring1()) {
    return hello_oneof_.hellostring1_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void FStructObject::set_hellostring1(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring1)
  if (!has_hellostring1()) {
    clear_hello_oneof();
    set_has_hellostring1();
    hello_oneof_.hellostring1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring1)
}
#if LANG_CXX11
inline void FStructObject::set_hellostring1(::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring1)
  if (!has_hellostring1()) {
    clear_hello_oneof();
    set_has_hellostring1();
    hello_oneof_.hellostring1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring1_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.hellostring1)
}
#endif
inline void FStructObject::set_hellostring1(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_hellostring1()) {
    clear_hello_oneof();
    set_has_hellostring1();
    hello_oneof_.hellostring1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.hellostring1)
}
inline void FStructObject::set_hellostring1(const char* value, size_t size) {
  if (!has_hellostring1()) {
    clear_hello_oneof();
    set_has_hellostring1();
    hello_oneof_.hellostring1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring1_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.hellostring1)
}
inline ::std::string* FStructObject::mutable_hellostring1() {
  if (!has_hellostring1()) {
    clear_hello_oneof();
    set_has_hellostring1();
    hello_oneof_.hellostring1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.hellostring1)
  return hello_oneof_.hellostring1_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_hellostring1() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.hellostring1)
  if (has_hellostring1()) {
    clear_has_hello_oneof();
    return hello_oneof_.hellostring1_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void FStructObject::set_allocated_hellostring1(::std::string* hellostring1) {
  if (!has_hellostring1()) {
    hello_oneof_.hellostring1_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_hello_oneof();
  if (hellostring1 != NULL) {
    set_has_hellostring1();
    hello_oneof_.hellostring1_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        hellostring1);
  }
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.hellostring1)
}

// string hellostring2 = 22;
inline bool FStructObject::has_hellostring2() const {
  return hello_oneof_case() == kHellostring2;
}
inline void FStructObject::set_has_hellostring2() {
  _oneof_case_[0] = kHellostring2;
}
inline void FStructObject::clear_hellostring2() {
  if (has_hellostring2()) {
    hello_oneof_.hellostring2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_hello_oneof();
  }
}
inline const ::std::string& FStructObject::hellostring2() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellostring2)
  if (has_hellostring2()) {
    return hello_oneof_.hellostring2_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void FStructObject::set_hellostring2(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring2)
  if (!has_hellostring2()) {
    clear_hello_oneof();
    set_has_hellostring2();
    hello_oneof_.hellostring2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring2)
}
#if LANG_CXX11
inline void FStructObject::set_hellostring2(::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring2)
  if (!has_hellostring2()) {
    clear_hello_oneof();
    set_has_hellostring2();
    hello_oneof_.hellostring2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring2_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.hellostring2)
}
#endif
inline void FStructObject::set_hellostring2(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_hellostring2()) {
    clear_hello_oneof();
    set_has_hellostring2();
    hello_oneof_.hellostring2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.hellostring2)
}
inline void FStructObject::set_hellostring2(const char* value, size_t size) {
  if (!has_hellostring2()) {
    clear_hello_oneof();
    set_has_hellostring2();
    hello_oneof_.hellostring2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.hellostring2)
}
inline ::std::string* FStructObject::mutable_hellostring2() {
  if (!has_hellostring2()) {
    clear_hello_oneof();
    set_has_hellostring2();
    hello_oneof_.hellostring2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.hellostring2)
  return hello_oneof_.hellostring2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_hellostring2() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.hellostring2)
  if (has_hellostring2()) {
    clear_has_hello_oneof();
    return hello_oneof_.hellostring2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void FStructObject::set_allocated_hellostring2(::std::string* hellostring2) {
  if (!has_hellostring2()) {
    hello_oneof_.hellostring2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_hello_oneof();
  if (hellostring2 != NULL) {
    set_has_hellostring2();
    hello_oneof_.hellostring2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        hellostring2);
  }
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.hellostring2)
}

// string hellostring3 = 23;
inline bool FStructObject::has_hellostring3() const {
  return hello_oneof_case() == kHellostring3;
}
inline void FStructObject::set_has_hellostring3() {
  _oneof_case_[0] = kHellostring3;
}
inline void FStructObject::clear_hellostring3() {
  if (has_hellostring3()) {
    hello_oneof_.hellostring3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_hello_oneof();
  }
}
inline const ::std::string& FStructObject::hellostring3() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellostring3)
  if (has_hellostring3()) {
    return hello_oneof_.hellostring3_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void FStructObject::set_hellostring3(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring3)
  if (!has_hellostring3()) {
    clear_hello_oneof();
    set_has_hellostring3();
    hello_oneof_.hellostring3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring3)
}
#if LANG_CXX11
inline void FStructObject::set_hellostring3(::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring3)
  if (!has_hellostring3()) {
    clear_hello_oneof();
    set_has_hellostring3();
    hello_oneof_.hellostring3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring3_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.hellostring3)
}
#endif
inline void FStructObject::set_hellostring3(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_hellostring3()) {
    clear_hello_oneof();
    set_has_hellostring3();
    hello_oneof_.hellostring3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.hellostring3)
}
inline void FStructObject::set_hellostring3(const char* value, size_t size) {
  if (!has_hellostring3()) {
    clear_hello_oneof();
    set_has_hellostring3();
    hello_oneof_.hellostring3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring3_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.hellostring3)
}
inline ::std::string* FStructObject::mutable_hellostring3() {
  if (!has_hellostring3()) {
    clear_hello_oneof();
    set_has_hellostring3();
    hello_oneof_.hellostring3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.hellostring3)
  return hello_oneof_.hellostring3_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_hellostring3() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.hellostring3)
  if (has_hellostring3()) {
    clear_has_hello_oneof();
    return hello_oneof_.hellostring3_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void FStructObject::set_allocated_hellostring3(::std::string* hellostring3) {
  if (!has_hellostring3()) {
    hello_oneof_.hellostring3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_hello_oneof();
  if (hellostring3 != NULL) {
    set_has_hellostring3();
    hello_oneof_.hellostring3_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        hellostring3);
  }
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.hellostring3)
}

// string hellostring4 = 24;
inline bool FStructObject::has_hellostring4() const {
  return hello_oneof_case() == kHellostring4;
}
inline void FStructObject::set_has_hellostring4() {
  _oneof_case_[0] = kHellostring4;
}
inline void FStructObject::clear_hellostring4() {
  if (has_hellostring4()) {
    hello_oneof_.hellostring4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_hello_oneof();
  }
}
inline const ::std::string& FStructObject::hellostring4() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellostring4)
  if (has_hellostring4()) {
    return hello_oneof_.hellostring4_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void FStructObject::set_hellostring4(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring4)
  if (!has_hellostring4()) {
    clear_hello_oneof();
    set_has_hellostring4();
    hello_oneof_.hellostring4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring4)
}
#if LANG_CXX11
inline void FStructObject::set_hellostring4(::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring4)
  if (!has_hellostring4()) {
    clear_hello_oneof();
    set_has_hellostring4();
    hello_oneof_.hellostring4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring4_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.hellostring4)
}
#endif
inline void FStructObject::set_hellostring4(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_hellostring4()) {
    clear_hello_oneof();
    set_has_hellostring4();
    hello_oneof_.hellostring4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.hellostring4)
}
inline void FStructObject::set_hellostring4(const char* value, size_t size) {
  if (!has_hellostring4()) {
    clear_hello_oneof();
    set_has_hellostring4();
    hello_oneof_.hellostring4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring4_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.hellostring4)
}
inline ::std::string* FStructObject::mutable_hellostring4() {
  if (!has_hellostring4()) {
    clear_hello_oneof();
    set_has_hellostring4();
    hello_oneof_.hellostring4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.hellostring4)
  return hello_oneof_.hellostring4_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_hellostring4() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.hellostring4)
  if (has_hellostring4()) {
    clear_has_hello_oneof();
    return hello_oneof_.hellostring4_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void FStructObject::set_allocated_hellostring4(::std::string* hellostring4) {
  if (!has_hellostring4()) {
    hello_oneof_.hellostring4_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_hello_oneof();
  if (hellostring4 != NULL) {
    set_has_hellostring4();
    hello_oneof_.hellostring4_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        hellostring4);
  }
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.hellostring4)
}

// string hellostring5 = 25;
inline bool FStructObject::has_hellostring5() const {
  return hello_oneof_case() == kHellostring5;
}
inline void FStructObject::set_has_hellostring5() {
  _oneof_case_[0] = kHellostring5;
}
inline void FStructObject::clear_hellostring5() {
  if (has_hellostring5()) {
    hello_oneof_.hellostring5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_hello_oneof();
  }
}
inline const ::std::string& FStructObject::hellostring5() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.hellostring5)
  if (has_hellostring5()) {
    return hello_oneof_.hellostring5_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void FStructObject::set_hellostring5(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring5)
  if (!has_hellostring5()) {
    clear_hello_oneof();
    set_has_hellostring5();
    hello_oneof_.hellostring5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring5)
}
#if LANG_CXX11
inline void FStructObject::set_hellostring5(::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.hellostring5)
  if (!has_hellostring5()) {
    clear_hello_oneof();
    set_has_hellostring5();
    hello_oneof_.hellostring5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring5_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TestCPP.FStructObject.hellostring5)
}
#endif
inline void FStructObject::set_hellostring5(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_hellostring5()) {
    clear_hello_oneof();
    set_has_hellostring5();
    hello_oneof_.hellostring5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.hellostring5)
}
inline void FStructObject::set_hellostring5(const char* value, size_t size) {
  if (!has_hellostring5()) {
    clear_hello_oneof();
    set_has_hellostring5();
    hello_oneof_.hellostring5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  hello_oneof_.hellostring5_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.hellostring5)
}
inline ::std::string* FStructObject::mutable_hellostring5() {
  if (!has_hellostring5()) {
    clear_hello_oneof();
    set_has_hellostring5();
    hello_oneof_.hellostring5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.hellostring5)
  return hello_oneof_.hellostring5_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* FStructObject::release_hellostring5() {
  // @@protoc_insertion_point(field_release:TestCPP.FStructObject.hellostring5)
  if (has_hellostring5()) {
    clear_has_hello_oneof();
    return hello_oneof_.hellostring5_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void FStructObject::set_allocated_hellostring5(::std::string* hellostring5) {
  if (!has_hellostring5()) {
    hello_oneof_.hellostring5_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_hello_oneof();
  if (hellostring5 != NULL) {
    set_has_hellostring5();
    hello_oneof_.hellostring5_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        hellostring5);
  }
  // @@protoc_insertion_point(field_set_allocated:TestCPP.FStructObject.hellostring5)
}

// .PlayerStateHello.EBoneState BoneState = 26;
inline void FStructObject::clear_bonestate() {
  bonestate_ = 0;
}
inline ::PlayerStateHello::EBoneState FStructObject::bonestate() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.BoneState)
  return static_cast< ::PlayerStateHello::EBoneState >(bonestate_);
}
inline void FStructObject::set_bonestate(::PlayerStateHello::EBoneState value) {
  
  bonestate_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.BoneState)
}

// .PlayerStateHello1.EBone1State Bone1State = 27;
inline void FStructObject::clear_bone1state() {
  bone1state_ = 0;
}
inline ::PlayerStateHello1::EBone1State FStructObject::bone1state() const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.Bone1State)
  return static_cast< ::PlayerStateHello1::EBone1State >(bone1state_);
}
inline void FStructObject::set_bone1state(::PlayerStateHello1::EBone1State value) {
  
  bone1state_ = value;
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.Bone1State)
}

// map<int32, string> masstirng = 28;
inline int FStructObject::masstirng_size() const {
  return masstirng_.size();
}
inline void FStructObject::clear_masstirng() {
  masstirng_.Clear();
}
inline const ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >&
FStructObject::masstirng() const {
  // @@protoc_insertion_point(field_map:TestCPP.FStructObject.masstirng)
  return masstirng_.GetMap();
}
inline ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >*
FStructObject::mutable_masstirng() {
  // @@protoc_insertion_point(field_mutable_map:TestCPP.FStructObject.masstirng)
  return masstirng_.MutableMap();
}

// repeated int32 MyArrayInt = 29;
inline int FStructObject::myarrayint_size() const {
  return myarrayint_.size();
}
inline void FStructObject::clear_myarrayint() {
  myarrayint_.Clear();
}
inline ::google::protobuf::int32 FStructObject::myarrayint(int index) const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.MyArrayInt)
  return myarrayint_.Get(index);
}
inline void FStructObject::set_myarrayint(int index, ::google::protobuf::int32 value) {
  myarrayint_.Set(index, value);
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.MyArrayInt)
}
inline void FStructObject::add_myarrayint(::google::protobuf::int32 value) {
  myarrayint_.Add(value);
  // @@protoc_insertion_point(field_add:TestCPP.FStructObject.MyArrayInt)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
FStructObject::myarrayint() const {
  // @@protoc_insertion_point(field_list:TestCPP.FStructObject.MyArrayInt)
  return myarrayint_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
FStructObject::mutable_myarrayint() {
  // @@protoc_insertion_point(field_mutable_list:TestCPP.FStructObject.MyArrayInt)
  return &myarrayint_;
}

// repeated string MyArrayString = 30;
inline int FStructObject::myarraystring_size() const {
  return myarraystring_.size();
}
inline void FStructObject::clear_myarraystring() {
  myarraystring_.Clear();
}
inline const ::std::string& FStructObject::myarraystring(int index) const {
  // @@protoc_insertion_point(field_get:TestCPP.FStructObject.MyArrayString)
  return myarraystring_.Get(index);
}
inline ::std::string* FStructObject::mutable_myarraystring(int index) {
  // @@protoc_insertion_point(field_mutable:TestCPP.FStructObject.MyArrayString)
  return myarraystring_.Mutable(index);
}
inline void FStructObject::set_myarraystring(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.MyArrayString)
  myarraystring_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void FStructObject::set_myarraystring(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:TestCPP.FStructObject.MyArrayString)
  myarraystring_.Mutable(index)->assign(std::move(value));
}
#endif
inline void FStructObject::set_myarraystring(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  myarraystring_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:TestCPP.FStructObject.MyArrayString)
}
inline void FStructObject::set_myarraystring(int index, const char* value, size_t size) {
  myarraystring_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:TestCPP.FStructObject.MyArrayString)
}
inline ::std::string* FStructObject::add_myarraystring() {
  // @@protoc_insertion_point(field_add_mutable:TestCPP.FStructObject.MyArrayString)
  return myarraystring_.Add();
}
inline void FStructObject::add_myarraystring(const ::std::string& value) {
  myarraystring_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:TestCPP.FStructObject.MyArrayString)
}
#if LANG_CXX11
inline void FStructObject::add_myarraystring(::std::string&& value) {
  myarraystring_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:TestCPP.FStructObject.MyArrayString)
}
#endif
inline void FStructObject::add_myarraystring(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  myarraystring_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:TestCPP.FStructObject.MyArrayString)
}
inline void FStructObject::add_myarraystring(const char* value, size_t size) {
  myarraystring_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:TestCPP.FStructObject.MyArrayString)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
FStructObject::myarraystring() const {
  // @@protoc_insertion_point(field_list:TestCPP.FStructObject.MyArrayString)
  return myarraystring_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
FStructObject::mutable_myarraystring() {
  // @@protoc_insertion_point(field_mutable_list:TestCPP.FStructObject.MyArrayString)
  return &myarraystring_;
}

inline bool FStructObject::has_hello_oneof() const {
  return hello_oneof_case() != HELLO_ONEOF_NOT_SET;
}
inline void FStructObject::clear_has_hello_oneof() {
  _oneof_case_[0] = HELLO_ONEOF_NOT_SET;
}
inline FStructObject::HelloOneofCase FStructObject::hello_oneof_case() const {
  return FStructObject::HelloOneofCase(_oneof_case_[0]);
}
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace TestCPP

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::TestCPP::FStructObject_EHelloState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TestCPP::FStructObject_EHelloState>() {
  return ::TestCPP::FStructObject_EHelloState_descriptor();
}
template <> struct is_proto_enum< ::TestCPP::EPlayerState> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::TestCPP::EPlayerState>() {
  return ::TestCPP::EPlayerState_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_CPPScript_2fTestCPPProto_2eproto__INCLUDED
