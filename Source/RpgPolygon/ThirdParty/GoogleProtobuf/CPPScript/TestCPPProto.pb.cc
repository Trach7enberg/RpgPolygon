// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CPPScript/TestCPPProto.proto

#include "CPPScript/TestCPPProto.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

//begin custom modify
#if defined(_MSC_VER)
#pragma warning(disable:4125)
#endif // _MSC_VER
//end custom modify
namespace TestCPP {
class FStructObject_FStructObject1_FStructObject2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FStructObject_FStructObject1_FStructObject2>
      _instance;
} _FStructObject_FStructObject1_FStructObject2_default_instance_;
class FStructObject_FStructObject1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FStructObject_FStructObject1>
      _instance;
} _FStructObject_FStructObject1_default_instance_;
class FStructObject_MasstirngEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FStructObject_MasstirngEntry_DoNotUse>
      _instance;
} _FStructObject_MasstirngEntry_DoNotUse_default_instance_;
class FStructObjectDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<FStructObject>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr hellostring_;
  ::google::protobuf::internal::ArenaStringPtr hellostring1_;
  ::google::protobuf::internal::ArenaStringPtr hellostring2_;
  ::google::protobuf::internal::ArenaStringPtr hellostring3_;
  ::google::protobuf::internal::ArenaStringPtr hellostring4_;
  ::google::protobuf::internal::ArenaStringPtr hellostring5_;
} _FStructObject_default_instance_;
}  // namespace TestCPP
namespace protobuf_CPPScript_2fTestCPPProto_2eproto {
void InitDefaultsFStructObject_FStructObject1_FStructObject2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::TestCPP::_FStructObject_FStructObject1_FStructObject2_default_instance_;
    new (ptr) ::TestCPP::FStructObject_FStructObject1_FStructObject2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestCPP::FStructObject_FStructObject1_FStructObject2::InitAsDefaultInstance();
}

void InitDefaultsFStructObject_FStructObject1_FStructObject2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFStructObject_FStructObject1_FStructObject2Impl);
}

void InitDefaultsFStructObject_FStructObject1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1_FStructObject2();
  {
    void* ptr = &::TestCPP::_FStructObject_FStructObject1_default_instance_;
    new (ptr) ::TestCPP::FStructObject_FStructObject1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestCPP::FStructObject_FStructObject1::InitAsDefaultInstance();
}

void InitDefaultsFStructObject_FStructObject1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFStructObject_FStructObject1Impl);
}

void InitDefaultsFStructObject_MasstirngEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::TestCPP::_FStructObject_MasstirngEntry_DoNotUse_default_instance_;
    new (ptr) ::TestCPP::FStructObject_MasstirngEntry_DoNotUse();
  }
  ::TestCPP::FStructObject_MasstirngEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsFStructObject_MasstirngEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFStructObject_MasstirngEntry_DoNotUseImpl);
}

void InitDefaultsFStructObjectImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1();
  protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_MasstirngEntry_DoNotUse();
  {
    void* ptr = &::TestCPP::_FStructObject_default_instance_;
    new (ptr) ::TestCPP::FStructObject();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::TestCPP::FStructObject::InitAsDefaultInstance();
}

void InitDefaultsFStructObject() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsFStructObjectImpl);
}

::google::protobuf::Metadata file_level_metadata[4];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_FStructObject1_FStructObject2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_FStructObject1_FStructObject2, helloint32_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_FStructObject1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_FStructObject1, helloint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_FStructObject1, object_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_MasstirngEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_MasstirngEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_MasstirngEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject_MasstirngEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, intvalue_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, intok_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, str_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellodouble_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellofloat_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellosint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellouint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellouint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellosint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellofiexed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellofiexed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, uhellofiexed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, uhellofiexed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, bup_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, xxxxstr_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, xxxbytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hellostate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, object2_),
  offsetof(::TestCPP::FStructObjectDefaultTypeInternal, hellostring_),
  offsetof(::TestCPP::FStructObjectDefaultTypeInternal, hellostring1_),
  offsetof(::TestCPP::FStructObjectDefaultTypeInternal, hellostring2_),
  offsetof(::TestCPP::FStructObjectDefaultTypeInternal, hellostring3_),
  offsetof(::TestCPP::FStructObjectDefaultTypeInternal, hellostring4_),
  offsetof(::TestCPP::FStructObjectDefaultTypeInternal, hellostring5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, bonestate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, bone1state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, masstirng_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, myarrayint_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, myarraystring_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::TestCPP::FStructObject, hello_oneof_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::TestCPP::FStructObject_FStructObject1_FStructObject2)},
  { 6, -1, sizeof(::TestCPP::FStructObject_FStructObject1)},
  { 13, 20, sizeof(::TestCPP::FStructObject_MasstirngEntry_DoNotUse)},
  { 22, -1, sizeof(::TestCPP::FStructObject)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestCPP::_FStructObject_FStructObject1_FStructObject2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestCPP::_FStructObject_FStructObject1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestCPP::_FStructObject_MasstirngEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::TestCPP::_FStructObject_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "CPPScript/TestCPPProto.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\034CPPScript/TestCPPProto.proto\022\007TestCPP\032"
      "\035CPPScript/TestCPPProto1.proto\032#CPPScrip"
      "t/Hello/TestCPPProto2.proto\"\305\010\n\rFStructO"
      "bject\022\020\n\010intvalue\030\001 \001(\005\022\r\n\005intok\030\002 \001(\005\022\013"
      "\n\003Str\030\003 \001(\t\022#\n\004type\030\004 \001(\0162\025.TestCPP.EPla"
      "yerState\022\023\n\013helloDouble\030\005 \001(\001\022\022\n\nhelloFl"
      "oat\030\006 \001(\002\022\023\n\013hellosint32\030\007 \001(\021\022\023\n\013hellou"
      "int32\030\010 \001(\r\022\023\n\013hellouint64\030\t \001(\004\022\023\n\013hell"
      "osint64\030\n \001(\022\022\025\n\rhellofiexed32\030\013 \001(\007\022\025\n\r"
      "hellofiexed64\030\014 \001(\006\022\026\n\016uhellofiexed32\030\r "
      "\001(\017\022\026\n\016uhellofiexed64\030\016 \001(\020\022\013\n\003bUP\030\017 \001(\010"
      "\022\017\n\007xxxxstr\030\020 \001(\t\022\020\n\010xxxbytes\030\021 \001(\014\0226\n\nH"
      "elloState\030\022 \001(\0162\".TestCPP.FStructObject."
      "EHelloState\0226\n\007Object2\030\023 \001(\0132%.TestCPP.F"
      "StructObject.FStructObject1\022\025\n\013hellostri"
      "ng\030\024 \001(\tH\000\022\026\n\014hellostring1\030\025 \001(\tH\000\022\026\n\014he"
      "llostring2\030\026 \001(\tH\000\022\026\n\014hellostring3\030\027 \001(\t"
      "H\000\022\026\n\014hellostring4\030\030 \001(\tH\000\022\026\n\014hellostrin"
      "g5\030\031 \001(\tH\000\022/\n\tBoneState\030\032 \001(\0162\034.PlayerSt"
      "ateHello.EBoneState\0222\n\nBone1State\030\033 \001(\0162"
      "\036.PlayerStateHello1.EBone1State\0228\n\tmasst"
      "irng\030\034 \003(\0132%.TestCPP.FStructObject.Masst"
      "irngEntry\022\022\n\nMyArrayInt\030\035 \003(\005\022\025\n\rMyArray"
      "String\030\036 \003(\t\032\220\001\n\016FStructObject1\022\022\n\nhello"
      "int32\030\001 \001(\005\022D\n\006Object\030\002 \001(\01324.TestCPP.FS"
      "tructObject.FStructObject1.FStructObject"
      "2\032$\n\016FStructObject2\022\022\n\nhelloint32\030\001 \001(\005\032"
      "0\n\016MasstirngEntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030"
      "\002 \001(\t:\0028\001\"9\n\013EHelloState\022\r\n\tHELLONONE\020\000\022"
      "\013\n\007HELLOOK\020\001\022\016\n\nHELLOHELLO\020\002B\r\n\013hello_on"
      "eof*+\n\014EPlayerState\022\010\n\004NONE\020\000\022\006\n\002OK\020\001\022\t\n"
      "\005Hello\020\002b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1256);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "CPPScript/TestCPPProto.proto", &protobuf_RegisterTypes);
  ::protobuf_CPPScript_2fTestCPPProto1_2eproto::AddDescriptors();
  ::protobuf_CPPScript_2fHello_2fTestCPPProto2_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_CPPScript_2fTestCPPProto_2eproto
namespace TestCPP {
const ::google::protobuf::EnumDescriptor* FStructObject_EHelloState_descriptor() {
  protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_enum_descriptors[0];
}
bool FStructObject_EHelloState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const FStructObject_EHelloState FStructObject::HELLONONE;
const FStructObject_EHelloState FStructObject::HELLOOK;
const FStructObject_EHelloState FStructObject::HELLOHELLO;
const FStructObject_EHelloState FStructObject::EHelloState_MIN;
const FStructObject_EHelloState FStructObject::EHelloState_MAX;
const int FStructObject::EHelloState_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* EPlayerState_descriptor() {
  protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_enum_descriptors[1];
}
bool EPlayerState_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void FStructObject_FStructObject1_FStructObject2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FStructObject_FStructObject1_FStructObject2::kHelloint32FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FStructObject_FStructObject1_FStructObject2::FStructObject_FStructObject1_FStructObject2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1_FStructObject2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestCPP.FStructObject.FStructObject1.FStructObject2)
}
FStructObject_FStructObject1_FStructObject2::FStructObject_FStructObject1_FStructObject2(const FStructObject_FStructObject1_FStructObject2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  helloint32_ = from.helloint32_;
  // @@protoc_insertion_point(copy_constructor:TestCPP.FStructObject.FStructObject1.FStructObject2)
}

void FStructObject_FStructObject1_FStructObject2::SharedCtor() {
  helloint32_ = 0;
  _cached_size_ = 0;
}

FStructObject_FStructObject1_FStructObject2::~FStructObject_FStructObject1_FStructObject2() {
  // @@protoc_insertion_point(destructor:TestCPP.FStructObject.FStructObject1.FStructObject2)
  SharedDtor();
}

void FStructObject_FStructObject1_FStructObject2::SharedDtor() {
}

void FStructObject_FStructObject1_FStructObject2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FStructObject_FStructObject1_FStructObject2::descriptor() {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FStructObject_FStructObject1_FStructObject2& FStructObject_FStructObject1_FStructObject2::default_instance() {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1_FStructObject2();
  return *internal_default_instance();
}

FStructObject_FStructObject1_FStructObject2* FStructObject_FStructObject1_FStructObject2::New(::google::protobuf::Arena* arena) const {
  FStructObject_FStructObject1_FStructObject2* n = new FStructObject_FStructObject1_FStructObject2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FStructObject_FStructObject1_FStructObject2::Clear() {
// @@protoc_insertion_point(message_clear_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  helloint32_ = 0;
  _internal_metadata_.Clear();
}

bool FStructObject_FStructObject1_FStructObject2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 helloint32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &helloint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TestCPP.FStructObject.FStructObject1.FStructObject2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TestCPP.FStructObject.FStructObject1.FStructObject2)
  return false;
#undef DO_
}

void FStructObject_FStructObject1_FStructObject2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 helloint32 = 1;
  if (this->helloint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->helloint32(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TestCPP.FStructObject.FStructObject1.FStructObject2)
}

::google::protobuf::uint8* FStructObject_FStructObject1_FStructObject2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 helloint32 = 1;
  if (this->helloint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->helloint32(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestCPP.FStructObject.FStructObject1.FStructObject2)
  return target;
}

size_t FStructObject_FStructObject1_FStructObject2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 helloint32 = 1;
  if (this->helloint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->helloint32());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FStructObject_FStructObject1_FStructObject2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  GOOGLE_DCHECK_NE(&from, this);
  const FStructObject_FStructObject1_FStructObject2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FStructObject_FStructObject1_FStructObject2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestCPP.FStructObject.FStructObject1.FStructObject2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestCPP.FStructObject.FStructObject1.FStructObject2)
    MergeFrom(*source);
  }
}

void FStructObject_FStructObject1_FStructObject2::MergeFrom(const FStructObject_FStructObject1_FStructObject2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.helloint32() != 0) {
    set_helloint32(from.helloint32());
  }
}

void FStructObject_FStructObject1_FStructObject2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FStructObject_FStructObject1_FStructObject2::CopyFrom(const FStructObject_FStructObject1_FStructObject2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestCPP.FStructObject.FStructObject1.FStructObject2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FStructObject_FStructObject1_FStructObject2::IsInitialized() const {
  return true;
}

void FStructObject_FStructObject1_FStructObject2::Swap(FStructObject_FStructObject1_FStructObject2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FStructObject_FStructObject1_FStructObject2::InternalSwap(FStructObject_FStructObject1_FStructObject2* other) {
  using std::swap;
  swap(helloint32_, other->helloint32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FStructObject_FStructObject1_FStructObject2::GetMetadata() const {
  protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void FStructObject_FStructObject1::InitAsDefaultInstance() {
  ::TestCPP::_FStructObject_FStructObject1_default_instance_._instance.get_mutable()->object_ = const_cast< ::TestCPP::FStructObject_FStructObject1_FStructObject2*>(
      ::TestCPP::FStructObject_FStructObject1_FStructObject2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FStructObject_FStructObject1::kHelloint32FieldNumber;
const int FStructObject_FStructObject1::kObjectFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FStructObject_FStructObject1::FStructObject_FStructObject1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestCPP.FStructObject.FStructObject1)
}
FStructObject_FStructObject1::FStructObject_FStructObject1(const FStructObject_FStructObject1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_object()) {
    object_ = new ::TestCPP::FStructObject_FStructObject1_FStructObject2(*from.object_);
  } else {
    object_ = NULL;
  }
  helloint32_ = from.helloint32_;
  // @@protoc_insertion_point(copy_constructor:TestCPP.FStructObject.FStructObject1)
}

void FStructObject_FStructObject1::SharedCtor() {
  ::memset(&object_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&helloint32_) -
      reinterpret_cast<char*>(&object_)) + sizeof(helloint32_));
  _cached_size_ = 0;
}

FStructObject_FStructObject1::~FStructObject_FStructObject1() {
  // @@protoc_insertion_point(destructor:TestCPP.FStructObject.FStructObject1)
  SharedDtor();
}

void FStructObject_FStructObject1::SharedDtor() {
  if (this != internal_default_instance()) delete object_;
}

void FStructObject_FStructObject1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FStructObject_FStructObject1::descriptor() {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FStructObject_FStructObject1& FStructObject_FStructObject1::default_instance() {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject_FStructObject1();
  return *internal_default_instance();
}

FStructObject_FStructObject1* FStructObject_FStructObject1::New(::google::protobuf::Arena* arena) const {
  FStructObject_FStructObject1* n = new FStructObject_FStructObject1;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FStructObject_FStructObject1::Clear() {
// @@protoc_insertion_point(message_clear_start:TestCPP.FStructObject.FStructObject1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && object_ != NULL) {
    delete object_;
  }
  object_ = NULL;
  helloint32_ = 0;
  _internal_metadata_.Clear();
}

bool FStructObject_FStructObject1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TestCPP.FStructObject.FStructObject1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 helloint32 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &helloint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TestCPP.FStructObject.FStructObject1.FStructObject2 Object = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TestCPP.FStructObject.FStructObject1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TestCPP.FStructObject.FStructObject1)
  return false;
#undef DO_
}

void FStructObject_FStructObject1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TestCPP.FStructObject.FStructObject1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 helloint32 = 1;
  if (this->helloint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->helloint32(), output);
  }

  // .TestCPP.FStructObject.FStructObject1.FStructObject2 Object = 2;
  if (this->has_object()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->object_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TestCPP.FStructObject.FStructObject1)
}

::google::protobuf::uint8* FStructObject_FStructObject1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TestCPP.FStructObject.FStructObject1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 helloint32 = 1;
  if (this->helloint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->helloint32(), target);
  }

  // .TestCPP.FStructObject.FStructObject1.FStructObject2 Object = 2;
  if (this->has_object()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->object_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestCPP.FStructObject.FStructObject1)
  return target;
}

size_t FStructObject_FStructObject1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestCPP.FStructObject.FStructObject1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .TestCPP.FStructObject.FStructObject1.FStructObject2 Object = 2;
  if (this->has_object()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->object_);
  }

  // int32 helloint32 = 1;
  if (this->helloint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->helloint32());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FStructObject_FStructObject1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestCPP.FStructObject.FStructObject1)
  GOOGLE_DCHECK_NE(&from, this);
  const FStructObject_FStructObject1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FStructObject_FStructObject1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestCPP.FStructObject.FStructObject1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestCPP.FStructObject.FStructObject1)
    MergeFrom(*source);
  }
}

void FStructObject_FStructObject1::MergeFrom(const FStructObject_FStructObject1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestCPP.FStructObject.FStructObject1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    mutable_object()->::TestCPP::FStructObject_FStructObject1_FStructObject2::MergeFrom(from.object());
  }
  if (from.helloint32() != 0) {
    set_helloint32(from.helloint32());
  }
}

void FStructObject_FStructObject1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestCPP.FStructObject.FStructObject1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FStructObject_FStructObject1::CopyFrom(const FStructObject_FStructObject1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestCPP.FStructObject.FStructObject1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FStructObject_FStructObject1::IsInitialized() const {
  return true;
}

void FStructObject_FStructObject1::Swap(FStructObject_FStructObject1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FStructObject_FStructObject1::InternalSwap(FStructObject_FStructObject1* other) {
  using std::swap;
  swap(object_, other->object_);
  swap(helloint32_, other->helloint32_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FStructObject_FStructObject1::GetMetadata() const {
  protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

FStructObject_MasstirngEntry_DoNotUse::FStructObject_MasstirngEntry_DoNotUse() {}
FStructObject_MasstirngEntry_DoNotUse::FStructObject_MasstirngEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void FStructObject_MasstirngEntry_DoNotUse::MergeFrom(const FStructObject_MasstirngEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata FStructObject_MasstirngEntry_DoNotUse::GetMetadata() const {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[2];
}
void FStructObject_MasstirngEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void FStructObject::InitAsDefaultInstance() {
  ::TestCPP::_FStructObject_default_instance_._instance.get_mutable()->object2_ = const_cast< ::TestCPP::FStructObject_FStructObject1*>(
      ::TestCPP::FStructObject_FStructObject1::internal_default_instance());
  ::TestCPP::_FStructObject_default_instance_.hellostring_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::TestCPP::_FStructObject_default_instance_.hellostring1_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::TestCPP::_FStructObject_default_instance_.hellostring2_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::TestCPP::_FStructObject_default_instance_.hellostring3_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::TestCPP::_FStructObject_default_instance_.hellostring4_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::TestCPP::_FStructObject_default_instance_.hellostring5_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FStructObject::kIntvalueFieldNumber;
const int FStructObject::kIntokFieldNumber;
const int FStructObject::kStrFieldNumber;
const int FStructObject::kTypeFieldNumber;
const int FStructObject::kHelloDoubleFieldNumber;
const int FStructObject::kHelloFloatFieldNumber;
const int FStructObject::kHellosint32FieldNumber;
const int FStructObject::kHellouint32FieldNumber;
const int FStructObject::kHellouint64FieldNumber;
const int FStructObject::kHellosint64FieldNumber;
const int FStructObject::kHellofiexed32FieldNumber;
const int FStructObject::kHellofiexed64FieldNumber;
const int FStructObject::kUhellofiexed32FieldNumber;
const int FStructObject::kUhellofiexed64FieldNumber;
const int FStructObject::kBUPFieldNumber;
const int FStructObject::kXxxxstrFieldNumber;
const int FStructObject::kXxxbytesFieldNumber;
const int FStructObject::kHelloStateFieldNumber;
const int FStructObject::kObject2FieldNumber;
const int FStructObject::kHellostringFieldNumber;
const int FStructObject::kHellostring1FieldNumber;
const int FStructObject::kHellostring2FieldNumber;
const int FStructObject::kHellostring3FieldNumber;
const int FStructObject::kHellostring4FieldNumber;
const int FStructObject::kHellostring5FieldNumber;
const int FStructObject::kBoneStateFieldNumber;
const int FStructObject::kBone1StateFieldNumber;
const int FStructObject::kMasstirngFieldNumber;
const int FStructObject::kMyArrayIntFieldNumber;
const int FStructObject::kMyArrayStringFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FStructObject::FStructObject()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TestCPP.FStructObject)
}
FStructObject::FStructObject(const FStructObject& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      myarrayint_(from.myarrayint_),
      myarraystring_(from.myarraystring_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  masstirng_.MergeFrom(from.masstirng_);
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.str().size() > 0) {
    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  xxxxstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xxxxstr().size() > 0) {
    xxxxstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xxxxstr_);
  }
  xxxbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.xxxbytes().size() > 0) {
    xxxbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xxxbytes_);
  }
  if (from.has_object2()) {
    object2_ = new ::TestCPP::FStructObject_FStructObject1(*from.object2_);
  } else {
    object2_ = NULL;
  }
  ::memcpy(&intvalue_, &from.intvalue_,
    static_cast<size_t>(reinterpret_cast<char*>(&bone1state_) -
    reinterpret_cast<char*>(&intvalue_)) + sizeof(bone1state_));
  clear_has_hello_oneof();
  switch (from.hello_oneof_case()) {
    case kHellostring: {
      set_hellostring(from.hellostring());
      break;
    }
    case kHellostring1: {
      set_hellostring1(from.hellostring1());
      break;
    }
    case kHellostring2: {
      set_hellostring2(from.hellostring2());
      break;
    }
    case kHellostring3: {
      set_hellostring3(from.hellostring3());
      break;
    }
    case kHellostring4: {
      set_hellostring4(from.hellostring4());
      break;
    }
    case kHellostring5: {
      set_hellostring5(from.hellostring5());
      break;
    }
    case HELLO_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:TestCPP.FStructObject)
}

void FStructObject::SharedCtor() {
  str_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xxxxstr_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xxxbytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&object2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bone1state_) -
      reinterpret_cast<char*>(&object2_)) + sizeof(bone1state_));
  clear_has_hello_oneof();
  _cached_size_ = 0;
}

FStructObject::~FStructObject() {
  // @@protoc_insertion_point(destructor:TestCPP.FStructObject)
  SharedDtor();
}

void FStructObject::SharedDtor() {
  str_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xxxxstr_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xxxbytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete object2_;
  if (has_hello_oneof()) {
    clear_hello_oneof();
  }
}

void FStructObject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FStructObject::descriptor() {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FStructObject& FStructObject::default_instance() {
  ::protobuf_CPPScript_2fTestCPPProto_2eproto::InitDefaultsFStructObject();
  return *internal_default_instance();
}

FStructObject* FStructObject::New(::google::protobuf::Arena* arena) const {
  FStructObject* n = new FStructObject;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FStructObject::clear_hello_oneof() {
// @@protoc_insertion_point(one_of_clear_start:TestCPP.FStructObject)
  switch (hello_oneof_case()) {
    case kHellostring: {
      hello_oneof_.hellostring_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHellostring1: {
      hello_oneof_.hellostring1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHellostring2: {
      hello_oneof_.hellostring2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHellostring3: {
      hello_oneof_.hellostring3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHellostring4: {
      hello_oneof_.hellostring4_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kHellostring5: {
      hello_oneof_.hellostring5_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case HELLO_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = HELLO_ONEOF_NOT_SET;
}


void FStructObject::Clear() {
// @@protoc_insertion_point(message_clear_start:TestCPP.FStructObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  masstirng_.Clear();
  myarrayint_.Clear();
  myarraystring_.Clear();
  str_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xxxxstr_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  xxxbytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && object2_ != NULL) {
    delete object2_;
  }
  object2_ = NULL;
  ::memset(&intvalue_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bone1state_) -
      reinterpret_cast<char*>(&intvalue_)) + sizeof(bone1state_));
  clear_hello_oneof();
  _internal_metadata_.Clear();
}

bool FStructObject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TestCPP.FStructObject)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 intvalue = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intvalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 intok = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &intok_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string Str = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->str().data(), static_cast<int>(this->str().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.Str"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TestCPP.EPlayerState type = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::TestCPP::EPlayerState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double helloDouble = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(41u /* 41 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &hellodouble_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float helloFloat = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(53u /* 53 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hellofloat_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 hellosint32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &hellosint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 hellouint32 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &hellouint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 hellouint64 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &hellouint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 hellosint64 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &hellosint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 hellofiexed32 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &hellofiexed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 hellofiexed64 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &hellofiexed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 uhellofiexed32 = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(109u /* 109 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &uhellofiexed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed64 uhellofiexed64 = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(113u /* 113 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &uhellofiexed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool bUP = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &bup_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string xxxxstr = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_xxxxstr()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->xxxxstr().data(), static_cast<int>(this->xxxxstr().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.xxxxstr"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes xxxbytes = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_xxxbytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TestCPP.FStructObject.EHelloState HelloState = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_hellostate(static_cast< ::TestCPP::FStructObject_EHelloState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .TestCPP.FStructObject.FStructObject1 Object2 = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_object2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hellostring = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hellostring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hellostring().data(), static_cast<int>(this->hellostring().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.hellostring"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hellostring1 = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hellostring1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hellostring1().data(), static_cast<int>(this->hellostring1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.hellostring1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hellostring2 = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hellostring2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hellostring2().data(), static_cast<int>(this->hellostring2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.hellostring2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hellostring3 = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hellostring3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hellostring3().data(), static_cast<int>(this->hellostring3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.hellostring3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hellostring4 = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hellostring4()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hellostring4().data(), static_cast<int>(this->hellostring4().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.hellostring4"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string hellostring5 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_hellostring5()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->hellostring5().data(), static_cast<int>(this->hellostring5().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.hellostring5"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PlayerStateHello.EBoneState BoneState = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bonestate(static_cast< ::PlayerStateHello::EBoneState >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .PlayerStateHello1.EBone1State Bone1State = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_bone1state(static_cast< ::PlayerStateHello1::EBone1State >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, string> masstirng = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          FStructObject_MasstirngEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              FStructObject_MasstirngEntry_DoNotUse,
              ::google::protobuf::int32, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::std::string > > parser(&masstirng_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.value().data(), static_cast<int>(parser.value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.MasstirngEntry.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 MyArrayInt = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_myarrayint())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 234u, input, this->mutable_myarrayint())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string MyArrayString = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_myarraystring()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->myarraystring(this->myarraystring_size() - 1).data(),
            static_cast<int>(this->myarraystring(this->myarraystring_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TestCPP.FStructObject.MyArrayString"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TestCPP.FStructObject)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TestCPP.FStructObject)
  return false;
#undef DO_
}

void FStructObject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TestCPP.FStructObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 intvalue = 1;
  if (this->intvalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->intvalue(), output);
  }

  // int32 intok = 2;
  if (this->intok() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->intok(), output);
  }

  // string Str = 3;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.Str");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->str(), output);
  }

  // .TestCPP.EPlayerState type = 4;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->type(), output);
  }

  // double helloDouble = 5;
  if (this->hellodouble() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(5, this->hellodouble(), output);
  }

  // float helloFloat = 6;
  if (this->hellofloat() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(6, this->hellofloat(), output);
  }

  // sint32 hellosint32 = 7;
  if (this->hellosint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->hellosint32(), output);
  }

  // uint32 hellouint32 = 8;
  if (this->hellouint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->hellouint32(), output);
  }

  // uint64 hellouint64 = 9;
  if (this->hellouint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(9, this->hellouint64(), output);
  }

  // sint64 hellosint64 = 10;
  if (this->hellosint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(10, this->hellosint64(), output);
  }

  // fixed32 hellofiexed32 = 11;
  if (this->hellofiexed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(11, this->hellofiexed32(), output);
  }

  // fixed64 hellofiexed64 = 12;
  if (this->hellofiexed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(12, this->hellofiexed64(), output);
  }

  // sfixed32 uhellofiexed32 = 13;
  if (this->uhellofiexed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(13, this->uhellofiexed32(), output);
  }

  // sfixed64 uhellofiexed64 = 14;
  if (this->uhellofiexed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(14, this->uhellofiexed64(), output);
  }

  // bool bUP = 15;
  if (this->bup() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->bup(), output);
  }

  // string xxxxstr = 16;
  if (this->xxxxstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xxxxstr().data(), static_cast<int>(this->xxxxstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.xxxxstr");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->xxxxstr(), output);
  }

  // bytes xxxbytes = 17;
  if (this->xxxbytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      17, this->xxxbytes(), output);
  }

  // .TestCPP.FStructObject.EHelloState HelloState = 18;
  if (this->hellostate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      18, this->hellostate(), output);
  }

  // .TestCPP.FStructObject.FStructObject1 Object2 = 19;
  if (this->has_object2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->object2_, output);
  }

  // string hellostring = 20;
  if (has_hellostring()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring().data(), static_cast<int>(this->hellostring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      20, this->hellostring(), output);
  }

  // string hellostring1 = 21;
  if (has_hellostring1()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring1().data(), static_cast<int>(this->hellostring1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      21, this->hellostring1(), output);
  }

  // string hellostring2 = 22;
  if (has_hellostring2()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring2().data(), static_cast<int>(this->hellostring2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      22, this->hellostring2(), output);
  }

  // string hellostring3 = 23;
  if (has_hellostring3()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring3().data(), static_cast<int>(this->hellostring3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      23, this->hellostring3(), output);
  }

  // string hellostring4 = 24;
  if (has_hellostring4()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring4().data(), static_cast<int>(this->hellostring4().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring4");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      24, this->hellostring4(), output);
  }

  // string hellostring5 = 25;
  if (has_hellostring5()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring5().data(), static_cast<int>(this->hellostring5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring5");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      25, this->hellostring5(), output);
  }

  // .PlayerStateHello.EBoneState BoneState = 26;
  if (this->bonestate() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      26, this->bonestate(), output);
  }

  // .PlayerStateHello1.EBone1State Bone1State = 27;
  if (this->bone1state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      27, this->bone1state(), output);
  }

  // map<int32, string> masstirng = 28;
  if (!this->masstirng().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "TestCPP.FStructObject.MasstirngEntry.value");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->masstirng().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->masstirng().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->masstirng().begin();
          it != this->masstirng().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<FStructObject_MasstirngEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(masstirng_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            28, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<FStructObject_MasstirngEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->masstirng().begin();
          it != this->masstirng().end(); ++it) {
        entry.reset(masstirng_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            28, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated int32 MyArrayInt = 29;
  if (this->myarrayint_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(29, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _myarrayint_cached_byte_size_));
  }
  for (int i = 0, n = this->myarrayint_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->myarrayint(i), output);
  }

  // repeated string MyArrayString = 30;
  for (int i = 0, n = this->myarraystring_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->myarraystring(i).data(), static_cast<int>(this->myarraystring(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.MyArrayString");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      30, this->myarraystring(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:TestCPP.FStructObject)
}

::google::protobuf::uint8* FStructObject::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:TestCPP.FStructObject)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 intvalue = 1;
  if (this->intvalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->intvalue(), target);
  }

  // int32 intok = 2;
  if (this->intok() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->intok(), target);
  }

  // string Str = 3;
  if (this->str().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->str().data(), static_cast<int>(this->str().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.Str");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->str(), target);
  }

  // .TestCPP.EPlayerState type = 4;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->type(), target);
  }

  // double helloDouble = 5;
  if (this->hellodouble() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(5, this->hellodouble(), target);
  }

  // float helloFloat = 6;
  if (this->hellofloat() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(6, this->hellofloat(), target);
  }

  // sint32 hellosint32 = 7;
  if (this->hellosint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->hellosint32(), target);
  }

  // uint32 hellouint32 = 8;
  if (this->hellouint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->hellouint32(), target);
  }

  // uint64 hellouint64 = 9;
  if (this->hellouint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(9, this->hellouint64(), target);
  }

  // sint64 hellosint64 = 10;
  if (this->hellosint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(10, this->hellosint64(), target);
  }

  // fixed32 hellofiexed32 = 11;
  if (this->hellofiexed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(11, this->hellofiexed32(), target);
  }

  // fixed64 hellofiexed64 = 12;
  if (this->hellofiexed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(12, this->hellofiexed64(), target);
  }

  // sfixed32 uhellofiexed32 = 13;
  if (this->uhellofiexed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(13, this->uhellofiexed32(), target);
  }

  // sfixed64 uhellofiexed64 = 14;
  if (this->uhellofiexed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(14, this->uhellofiexed64(), target);
  }

  // bool bUP = 15;
  if (this->bup() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->bup(), target);
  }

  // string xxxxstr = 16;
  if (this->xxxxstr().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->xxxxstr().data(), static_cast<int>(this->xxxxstr().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.xxxxstr");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->xxxxstr(), target);
  }

  // bytes xxxbytes = 17;
  if (this->xxxbytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        17, this->xxxbytes(), target);
  }

  // .TestCPP.FStructObject.EHelloState HelloState = 18;
  if (this->hellostate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      18, this->hellostate(), target);
  }

  // .TestCPP.FStructObject.FStructObject1 Object2 = 19;
  if (this->has_object2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *this->object2_, deterministic, target);
  }

  // string hellostring = 20;
  if (has_hellostring()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring().data(), static_cast<int>(this->hellostring().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        20, this->hellostring(), target);
  }

  // string hellostring1 = 21;
  if (has_hellostring1()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring1().data(), static_cast<int>(this->hellostring1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        21, this->hellostring1(), target);
  }

  // string hellostring2 = 22;
  if (has_hellostring2()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring2().data(), static_cast<int>(this->hellostring2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        22, this->hellostring2(), target);
  }

  // string hellostring3 = 23;
  if (has_hellostring3()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring3().data(), static_cast<int>(this->hellostring3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        23, this->hellostring3(), target);
  }

  // string hellostring4 = 24;
  if (has_hellostring4()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring4().data(), static_cast<int>(this->hellostring4().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring4");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        24, this->hellostring4(), target);
  }

  // string hellostring5 = 25;
  if (has_hellostring5()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->hellostring5().data(), static_cast<int>(this->hellostring5().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.hellostring5");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        25, this->hellostring5(), target);
  }

  // .PlayerStateHello.EBoneState BoneState = 26;
  if (this->bonestate() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      26, this->bonestate(), target);
  }

  // .PlayerStateHello1.EBone1State Bone1State = 27;
  if (this->bone1state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      27, this->bone1state(), target);
  }

  // map<int32, string> masstirng = 28;
  if (!this->masstirng().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->second.data(), static_cast<int>(p->second.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "TestCPP.FStructObject.MasstirngEntry.value");
      }
    };

    if (deterministic &&
        this->masstirng().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->masstirng().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->masstirng().begin();
          it != this->masstirng().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<FStructObject_MasstirngEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(masstirng_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       28, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
      }
    } else {
      ::google::protobuf::scoped_ptr<FStructObject_MasstirngEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
          it = this->masstirng().begin();
          it != this->masstirng().end(); ++it) {
        entry.reset(masstirng_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       28, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // repeated int32 MyArrayInt = 29;
  if (this->myarrayint_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      29,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _myarrayint_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->myarrayint_, target);
  }

  // repeated string MyArrayString = 30;
  for (int i = 0, n = this->myarraystring_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->myarraystring(i).data(), static_cast<int>(this->myarraystring(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TestCPP.FStructObject.MyArrayString");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(30, this->myarraystring(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TestCPP.FStructObject)
  return target;
}

size_t FStructObject::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TestCPP.FStructObject)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, string> masstirng = 28;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->masstirng_size());
  {
    ::google::protobuf::scoped_ptr<FStructObject_MasstirngEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::std::string >::const_iterator
        it = this->masstirng().begin();
        it != this->masstirng().end(); ++it) {
      entry.reset(masstirng_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated int32 MyArrayInt = 29;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->myarrayint_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _myarrayint_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string MyArrayString = 30;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->myarraystring_size());
  for (int i = 0, n = this->myarraystring_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->myarraystring(i));
  }

  // string Str = 3;
  if (this->str().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->str());
  }

  // string xxxxstr = 16;
  if (this->xxxxstr().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->xxxxstr());
  }

  // bytes xxxbytes = 17;
  if (this->xxxbytes().size() > 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->xxxbytes());
  }

  // .TestCPP.FStructObject.FStructObject1 Object2 = 19;
  if (this->has_object2()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->object2_);
  }

  // int32 intvalue = 1;
  if (this->intvalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intvalue());
  }

  // int32 intok = 2;
  if (this->intok() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->intok());
  }

  // double helloDouble = 5;
  if (this->hellodouble() != 0) {
    total_size += 1 + 8;
  }

  // .TestCPP.EPlayerState type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // float helloFloat = 6;
  if (this->hellofloat() != 0) {
    total_size += 1 + 4;
  }

  // sint32 hellosint32 = 7;
  if (this->hellosint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->hellosint32());
  }

  // uint32 hellouint32 = 8;
  if (this->hellouint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->hellouint32());
  }

  // uint64 hellouint64 = 9;
  if (this->hellouint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->hellouint64());
  }

  // sint64 hellosint64 = 10;
  if (this->hellosint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->hellosint64());
  }

  // fixed64 hellofiexed64 = 12;
  if (this->hellofiexed64() != 0) {
    total_size += 1 + 8;
  }

  // fixed32 hellofiexed32 = 11;
  if (this->hellofiexed32() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 uhellofiexed32 = 13;
  if (this->uhellofiexed32() != 0) {
    total_size += 1 + 4;
  }

  // sfixed64 uhellofiexed64 = 14;
  if (this->uhellofiexed64() != 0) {
    total_size += 1 + 8;
  }

  // bool bUP = 15;
  if (this->bup() != 0) {
    total_size += 1 + 1;
  }

  // .TestCPP.FStructObject.EHelloState HelloState = 18;
  if (this->hellostate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->hellostate());
  }

  // .PlayerStateHello.EBoneState BoneState = 26;
  if (this->bonestate() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bonestate());
  }

  // .PlayerStateHello1.EBone1State Bone1State = 27;
  if (this->bone1state() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->bone1state());
  }

  switch (hello_oneof_case()) {
    // string hellostring = 20;
    case kHellostring: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hellostring());
      break;
    }
    // string hellostring1 = 21;
    case kHellostring1: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hellostring1());
      break;
    }
    // string hellostring2 = 22;
    case kHellostring2: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hellostring2());
      break;
    }
    // string hellostring3 = 23;
    case kHellostring3: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hellostring3());
      break;
    }
    // string hellostring4 = 24;
    case kHellostring4: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hellostring4());
      break;
    }
    // string hellostring5 = 25;
    case kHellostring5: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->hellostring5());
      break;
    }
    case HELLO_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FStructObject::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TestCPP.FStructObject)
  GOOGLE_DCHECK_NE(&from, this);
  const FStructObject* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FStructObject>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TestCPP.FStructObject)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TestCPP.FStructObject)
    MergeFrom(*source);
  }
}

void FStructObject::MergeFrom(const FStructObject& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TestCPP.FStructObject)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  masstirng_.MergeFrom(from.masstirng_);
  myarrayint_.MergeFrom(from.myarrayint_);
  myarraystring_.MergeFrom(from.myarraystring_);
  if (from.str().size() > 0) {

    str_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.str_);
  }
  if (from.xxxxstr().size() > 0) {

    xxxxstr_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xxxxstr_);
  }
  if (from.xxxbytes().size() > 0) {

    xxxbytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.xxxbytes_);
  }
  if (from.has_object2()) {
    mutable_object2()->::TestCPP::FStructObject_FStructObject1::MergeFrom(from.object2());
  }
  if (from.intvalue() != 0) {
    set_intvalue(from.intvalue());
  }
  if (from.intok() != 0) {
    set_intok(from.intok());
  }
  if (from.hellodouble() != 0) {
    set_hellodouble(from.hellodouble());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.hellofloat() != 0) {
    set_hellofloat(from.hellofloat());
  }
  if (from.hellosint32() != 0) {
    set_hellosint32(from.hellosint32());
  }
  if (from.hellouint32() != 0) {
    set_hellouint32(from.hellouint32());
  }
  if (from.hellouint64() != 0) {
    set_hellouint64(from.hellouint64());
  }
  if (from.hellosint64() != 0) {
    set_hellosint64(from.hellosint64());
  }
  if (from.hellofiexed64() != 0) {
    set_hellofiexed64(from.hellofiexed64());
  }
  if (from.hellofiexed32() != 0) {
    set_hellofiexed32(from.hellofiexed32());
  }
  if (from.uhellofiexed32() != 0) {
    set_uhellofiexed32(from.uhellofiexed32());
  }
  if (from.uhellofiexed64() != 0) {
    set_uhellofiexed64(from.uhellofiexed64());
  }
  if (from.bup() != 0) {
    set_bup(from.bup());
  }
  if (from.hellostate() != 0) {
    set_hellostate(from.hellostate());
  }
  if (from.bonestate() != 0) {
    set_bonestate(from.bonestate());
  }
  if (from.bone1state() != 0) {
    set_bone1state(from.bone1state());
  }
  switch (from.hello_oneof_case()) {
    case kHellostring: {
      set_hellostring(from.hellostring());
      break;
    }
    case kHellostring1: {
      set_hellostring1(from.hellostring1());
      break;
    }
    case kHellostring2: {
      set_hellostring2(from.hellostring2());
      break;
    }
    case kHellostring3: {
      set_hellostring3(from.hellostring3());
      break;
    }
    case kHellostring4: {
      set_hellostring4(from.hellostring4());
      break;
    }
    case kHellostring5: {
      set_hellostring5(from.hellostring5());
      break;
    }
    case HELLO_ONEOF_NOT_SET: {
      break;
    }
  }
}

void FStructObject::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TestCPP.FStructObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FStructObject::CopyFrom(const FStructObject& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TestCPP.FStructObject)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FStructObject::IsInitialized() const {
  return true;
}

void FStructObject::Swap(FStructObject* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FStructObject::InternalSwap(FStructObject* other) {
  using std::swap;
  masstirng_.Swap(&other->masstirng_);
  myarrayint_.InternalSwap(&other->myarrayint_);
  myarraystring_.InternalSwap(&other->myarraystring_);
  str_.Swap(&other->str_);
  xxxxstr_.Swap(&other->xxxxstr_);
  xxxbytes_.Swap(&other->xxxbytes_);
  swap(object2_, other->object2_);
  swap(intvalue_, other->intvalue_);
  swap(intok_, other->intok_);
  swap(hellodouble_, other->hellodouble_);
  swap(type_, other->type_);
  swap(hellofloat_, other->hellofloat_);
  swap(hellosint32_, other->hellosint32_);
  swap(hellouint32_, other->hellouint32_);
  swap(hellouint64_, other->hellouint64_);
  swap(hellosint64_, other->hellosint64_);
  swap(hellofiexed64_, other->hellofiexed64_);
  swap(hellofiexed32_, other->hellofiexed32_);
  swap(uhellofiexed32_, other->uhellofiexed32_);
  swap(uhellofiexed64_, other->uhellofiexed64_);
  swap(bup_, other->bup_);
  swap(hellostate_, other->hellostate_);
  swap(bonestate_, other->bonestate_);
  swap(bone1state_, other->bone1state_);
  swap(hello_oneof_, other->hello_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FStructObject::GetMetadata() const {
  protobuf_CPPScript_2fTestCPPProto_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_CPPScript_2fTestCPPProto_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace TestCPP

// @@protoc_insertion_point(global_scope)
